name: "AlexNet"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227      
    scale: 0.00390625
#   mean_file: "/home/stu_3/Documents/caffe/data/myself1/ucm_aug_mean.binaryproto"
  }
  data_param {
    source: "/home/stu_3/Documents/caffe/examples/myself1/ucm_train_aug_lmdb"
    batch_size: 60
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    scale: 0.00390625
#    mean_file: "/home/stu_3/Documents/caffe/data/myself1/ucm_aug_mean.binaryproto"
  }
  data_param {
    source: "/home/stu_3/Documents/caffe/examples/myself1/ucm_val_lmdb"
    batch_size: 60
    backend: LMDB
  }
}
# ------------------------ layer 1 -----------------------------
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
# --------------------------- layer 2 ------------------------
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
#-----------------------layer 3-------------------------
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
   name: "split1"
   type: "Split"
   bottom: "conv3"
   top: "conv3_split0"
   top: "conv3_split1"
}
layer {
   name: "ip_svm1"
   type: "InnerProduct"
   bottom: "conv3_split1"
   top: "ip_svm1"
   param {
     lr_mult: 10
     decay_mult: 1
   }
   param {
     lr_mult: 20
     decay_mult: 0
   }
   inner_product_param {
     num_output: 21
     weight_filler {
       type: "xavier"
       std: 0.01
     }
     bias_filler {
       type: "constant"
       value: 0
     }
   }
}
layer {
   name: "loss"
   type: "SoftmaxWithLoss"
   bottom: "ip_svm1"
   bottom: "label"
}

layer {
  name: "relu3"
  type: "ReLU"
#  bottom: "conv3"
#  top: "conv3"
  bottom: "conv3_split0"
  top: "conv3_split0"
}
#-----------------------layer 4-------------------------
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3_split0"
#  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "split2"
  type: "Split"
  bottom: "conv4"
  top: "conv4_split0"
  top: "conv4_split1"
}
layer {
  name: "ip_svm2"
  type: "InnerProduct"
  bottom: "conv4_split1"
  top: "ip_svm2"
   param {
     lr_mult: 10
     decay_mult: 1
   }
   param {
     lr_mult: 20
     decay_mult: 0
   }
   inner_product_param {
     num_output: 21
     weight_filler {
       type: "xavier"
       std: 0.01
     }
     bias_filler {
       type: "constant"
       value: 0
     }
   }
}
layer {
   name: "loss"
   type: "SoftmaxWithLoss"
   bottom: "ip_svm2"
   bottom: "label"
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4_split0"
  top: "conv4_split0"
#  bottom: "conv4"
#  top: "conv4"
}
#-----------------------layer 5-------------------------
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4_split0"
#  bottom:"conv4"
  top: "conv5"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "split3"
  type: "Split"
  bottom: "conv4"
  top: "conv5_split0"
  top: "conv5_split1"
}
layer {
  name: "ip_svm3"
  type: "InnerProduct"
  bottom: "conv5_split1"
  top: "ip_svm3"
   param {
     lr_mult: 10
     decay_mult: 1
   }
   param {
     lr_mult: 20
     decay_mult: 0
   }
   inner_product_param {
     num_output: 21
     weight_filler {
       type: "xavier"
       std: 0.01
     }
     bias_filler {
       type: "constant"
       value: 0
     }
   }
}
layer {
   name: "loss"
   type: "SoftmaxWithLoss"
   bottom: "ip_svm3"
   bottom: "label"
}


layer {
  name: "relu5"
  type: "ReLU"
  #bottom: "conv5"
  #top: "conv5"
  bottom: "conv5_split0"
  top: "conv5_split0"
}
#--------------------------layer spm------------------------
layer {
  name: "pool5_spm6"
  type: "Pooling"
  bottom: "conv5_split0"
  top: "pool5_spm6"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer{
   name:"pool5_spm6_flatten"
   type:"Reshape"
   bottom:"pool5_spm6"
   top:"pool5_spm6_flatten"
    reshape_param {
      shape {
        dim: 0  
        dim: -1
      }
    }
}
layer{
   name:"pool5_spm3"
   type:"Pooling"
   bottom:"conv5"
   top:"pool5_spm3"
   pooling_param{
     pool:MAX
     kernel_size:5
     stride:4
     }
}
layer{
   name:"pool5_spm3_flatten"
   type:"Reshape"
   bottom:"pool5_spm3"
   top:"pool5_spm3_flatten"
    reshape_param {
      shape {
        dim: 0  
        dim: -1
      }
    }
}
layer{
    name:"pool5_spm2"
    type:"Pooling"
    bottom:"conv5"
    top:"pool5_spm2"
    pooling_param{
      pool:MAX
      kernel_size:7
      stride:7
     }
}
layer{
     name:"pool5_spm2_flatten"
     type:"Reshape"
     bottom:"pool5_spm2"
     top:"pool5_spm2_flatten"
      reshape_param {
      shape {
        dim: 0  
        dim: -1
      }
    }
}
layer{
     name:"pool5_spm1"
     type:"Pooling"
     bottom:"conv5"
     top:"pool5_spm1"
     pooling_param{
       pool:MAX
       kernel_size:13
       stride:13
     }
}
layer{
     name:"pool5_spm1_flatten"
     type:"Reshape"
     bottom:"pool5_spm1"
     top:"pool5_spm1_flatten"
     reshape_param {
      shape {
        dim: 0  
        dim: -1
      }
    }
}
layer{
     name:"pool5_spm"
     type:"Concat"
     bottom:"pool5_spm1_flatten"
     bottom:"pool5_spm2_flatten"
     bottom:"pool5_spm3_flatten"
     bottom:"pool5_spm6_flatten"
     top:"pool5_spm"
     concat_param{
     concat_dim:1
     }
}
#--------------------------layer 6------------------------
layer {
  name: "fc6/new"
  type: "InnerProduct"
  bottom: "pool5_spm"
  top: "fc6/new"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6/new"
  type: "ReLU"
  bottom: "fc6/new"
  top: "fc6/new"
}
layer {
  name: "drop6/new"
  type: "Dropout"
  bottom: "fc6/new"
  top: "fc6/new"
  dropout_param {
    dropout_ratio: 0.5
  }
}
#--------------------------layer 7------------------------
layer {
  name: "fc7/new"
  type: "InnerProduct"
  bottom: "fc6/new"
  top: "fc7/new"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7/new"
  type: "ReLU"
  bottom: "fc7/new"
  top: "fc7/new"
}
layer {
  name: "drop7/new"
  type: "Dropout"
  bottom: "fc7/new"
  top: "fc7/new"
  dropout_param {
    dropout_ratio: 0.5
  }
}
#--------------------------layer 8------------------------
layer {
  name: "fc8/new"
  type: "InnerProduct"
  bottom: "fc7/new"
  top: "fc8/new"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 21
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
#-----------------------output------------------------
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8/new"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  type: 'Python'
  name: 'py_accuracy'
  top: 'py_accuracy'
  bottom: 'fc8/new'
  bottom: 'label'
  python_param {
    # the module name -- usually the filename -- that needs to be in $PYTHONPATH
    module: 'python_confmat'
    # the layer name -- the class name in the module
    layer: 'PythonConfMat'
    param_str: '{"test_iter":7}'
  }
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8/new"
  bottom: "label"
  top: "loss"
}
